{"ast":null,"code":"//GLOBAL VARIABLES\nconst randomButton = document.querySelector('.random');\nconst dogList = document.getElementById('doggoDropDown');\nconst listButton = document.querySelector('.list');\nconst refreshButton = document.querySelector('.grid'); //spinner\n//EVENT LISTENERS\n// window load\n\nwindow.addEventListener('load', populateList);\nwindow.addEventListener('load', getDogTerm);\nwindow.addEventListener('load', createImageGrid); //click and change\n\nrandomButton.addEventListener('click', getRandomDoggo);\ndogList.addEventListener('change', getBreedImage);\nlistButton.addEventListener('click', getBreedImage);\nrefreshButton.addEventListener('click', createImageGrid); //FETCH CALLS\n//wikipedia dog term serach\n\nfunction getDogTerm() {\n  fetch('https://en.wikipedia.org/w/api.php?action=opensearch&origin=*&search=dog&formatversion=2').then(checkStatus).then(response => response.json()).then(data => displayDogInfo(data)).catch(error => notifyUser(error));\n} //random dog image\n\n\nfunction getRandomDoggo() {\n  fetch('https://shibe.online/api/cats?count=50').then(checkStatus).then(response => response.json()).then(data => handleData(data)).catch(error => notifyUser(error));\n} //populate List\n\n\nfunction populateList() {\n  fetch('https://dog.ceo/api/breeds/list/all').then(checkStatus).then(response => response.json()).then(data => createListItems(data.message)).catch(error => notifyUser(error));\n} //getBreedImage\n\n\nfunction getBreedImage() {\n  //get list value\n  let selectedBreed = dogList.options[dogList.selectedIndex].value; //build url\n\n  let url = `https://dog.ceo/api/breed/${selectedBreed}/images`; //fetch call\n\n  fetch(url).then(checkStatus).then(response => response.json()).then(data => getImageURL(data.message)).catch(error => console.log(error));\n}\n\nfunction createImageGrid() {\n  fetch('https://dog.ceo/api/breeds/image/random/3').then(checkStatus).then(response => response.json()).then(data => createGrid(data.message)).catch(error => notifyUser(error));\n} //HELPER FUNCTIONS\n//checkStatus\n\n\nfunction checkStatus(response) {\n  if (response.ok) {\n    return Promise.resolve(response);\n  } else {\n    return Promise.reject(new Error(response.statusText));\n  }\n} //display Dog Info\n\n\nfunction displayDogInfo(data) {\n  //populate paragraph\n  document.getElementById('dogInfo').innerHTML = `<strong>${capitalize(data[0])}:</strong> ${data[2][0]} <a href=\"${data[3][0]}\" alt=\"read more on wikipedia\"> Read more on wikipedia</a>`;\n} //handleData\n\n\nfunction handleData(data) {\n  let url = data.message;\n  console.log(url);\n  let regex = /https:\\/\\/images\\.dog\\.ceo\\/breeds\\/(\\w+\\-?\\w+)\\/.+/g;\n  let breedName = regex.exec(url);\n  document.getElementById('randomImageContainer').innerHTML = `<img alt=\"random image of a ${fixBreed(breedName[1])}\" src='${url}'/>`;\n  document.querySelector('.dogInfo').innerHTML = `<p class=\"h5\">Random image of a ${fixBreed(breedName[1])}</p>`;\n} //getImageURL\n\n\nfunction getImageURL(data) {\n  //get random number\n  let randomNumberURL = data[Math.floor(Math.random() * data.length) + 1];\n  listImageContainer.innerHTML = `<img src=\"${randomNumberURL}\" alt=\"${extractBreedName(data)}\"/>`;\n} //createListItems\n\n\nfunction createListItems(data) {\n  let output = '';\n  Object.keys(data).forEach(key => output += `<option value=\"${key}\">${fixBreed(key)}</option>`);\n  document.getElementById('doggoDropDown').innerHTML = output;\n} //notifyUser\n\n\nfunction notifyUser(error) {\n  const errorContainer = document.querySelector('.alert');\n  errorContainer.innerHTML = `There was an error with the server request (${error}). <br> Click the button again.`;\n  errorContainer.style.display = 'block';\n  setTimeout(() => {\n    errorContainer.innerHTML = '';\n    errorContainer.style.display = 'none';\n  }, 4000);\n} //fixBreed\n\n\nfunction fixBreed(breedName) {\n  if (breedName === 'germanshepherd') {\n    return 'German Shepherd';\n  } else if (breedName === 'mexicanhairless') {\n    return 'Mexican Hairless';\n  } else if (breedName === 'stbernard') {\n    return 'St. Bernard';\n  } else if (breedName === \"african\") {\n    return 'African Wild Dog';\n  } else if (breedName === 'bullterrier') {\n    return 'Bull Terier';\n  }\n\n  return capitalize(breedName);\n} //capitalize breed name\n\n\nfunction capitalize(breedName) {\n  return breedName.replace(/\\-/g, ' ').split(\" \").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\n} //extract breed name\n\n\nfunction extractBreedName(data) {\n  let regex = /https:\\/\\/images\\.dog\\.ceo\\/breeds\\/(\\w+-?\\w+)\\/\\w+\\.\\w+/g;\n  let match = regex.exec(data);\n  return fixBreed(match[1]);\n} //createGrid\n\n\nfunction createGrid(data) {\n  let output = '';\n  const container = document.querySelector('.card-deck');\n  data.map(item => {\n    output += `\n    <div class=\"card mb-4 box-shadow\">\n      <div class=\"card-header\">\n        <h4 class=\"my-0 font-weight-normal\">${extractBreedName(item)}</h4>\n      </div>\n      <div class=\"card-body\">\n        <img src=\"${item}\" class=\"img-fluid\" alt=\"${extractBreedName(item)}\"/>\n      </div>\n    </div>    \n    `;\n  });\n  container.innerHTML = output;\n}","map":{"version":3,"sources":["C:/Users/santo/Downloads/React_Image_Search_Application-master/src/components/search/Search.js"],"names":["randomButton","document","querySelector","dogList","getElementById","listButton","refreshButton","window","addEventListener","populateList","getDogTerm","createImageGrid","getRandomDoggo","getBreedImage","fetch","then","checkStatus","response","json","data","displayDogInfo","catch","error","notifyUser","handleData","createListItems","message","selectedBreed","options","selectedIndex","value","url","getImageURL","console","log","createGrid","ok","Promise","resolve","reject","Error","statusText","innerHTML","capitalize","regex","breedName","exec","fixBreed","randomNumberURL","Math","floor","random","length","listImageContainer","extractBreedName","output","Object","keys","forEach","key","errorContainer","style","display","setTimeout","replace","split","map","word","charAt","toUpperCase","slice","join","match","container","item"],"mappings":"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","sourcesContent":["//GLOBAL VARIABLES\nconst randomButton = document.querySelector('.random');\nconst dogList = document.getElementById('doggoDropDown');\nconst listButton = document.querySelector('.list');\nconst refreshButton = document.querySelector('.grid');\n//spinner\n\n\n//EVENT LISTENERS\n// window load\nwindow.addEventListener('load', populateList);\nwindow.addEventListener('load', getDogTerm);\nwindow.addEventListener('load', createImageGrid);\n//click and change\nrandomButton.addEventListener('click', getRandomDoggo);\ndogList.addEventListener('change', getBreedImage);\nlistButton.addEventListener('click', getBreedImage);\nrefreshButton.addEventListener('click', createImageGrid);\n\n//FETCH CALLS\n//wikipedia dog term serach\nfunction getDogTerm(){\n  fetch('https://en.wikipedia.org/w/api.php?action=opensearch&origin=*&search=dog&formatversion=2')\n    .then(checkStatus)\n    .then(response => response.json())\n    .then(data => displayDogInfo(data))\n    .catch(error => notifyUser(error))\n}\n\n//random dog image\nfunction getRandomDoggo(){\n  fetch('https://shibe.online/api/cats?count=50')\n    .then(checkStatus)\n    .then(response => response.json())\n    .then(data => handleData(data))\n    .catch(error => notifyUser(error))\n}\n\n//populate List\nfunction populateList(){\n  fetch('https://dog.ceo/api/breeds/list/all')\n    .then(checkStatus)\n    .then(response => response.json())\n    .then(data => createListItems(data.message))\n    .catch(error => notifyUser(error))\n}\n\n//getBreedImage\nfunction getBreedImage(){\n  //get list value\n  let selectedBreed = dogList.options[dogList.selectedIndex].value;\n  //build url\n  let url = `https://dog.ceo/api/breed/${selectedBreed}/images`;\n  //fetch call\n  fetch(url)\n    .then(checkStatus)\n    .then(response => response.json())\n    .then(data => getImageURL(data.message))\n    .catch(error => console.log(error))\n}\n\nfunction createImageGrid(){\n  fetch('https://dog.ceo/api/breeds/image/random/3')\n  .then(checkStatus)\n  .then(response => response.json())\n  .then(data => createGrid(data.message))\n  .catch(error => notifyUser(error))\n}\n\n//HELPER FUNCTIONS\n//checkStatus\nfunction checkStatus(response){\n  if(response.ok){\n    return Promise.resolve(response);\n  }else{\n    return Promise.reject(new Error(response.statusText));\n  }\n}\n\n//display Dog Info\nfunction displayDogInfo(data){\n  //populate paragraph\n  document.getElementById('dogInfo').innerHTML = `<strong>${capitalize(data[0])}:</strong> ${data[2][0]} <a href=\"${data[3][0]}\" alt=\"read more on wikipedia\"> Read more on wikipedia</a>`;\n}\n\n\n//handleData\nfunction handleData(data){\n  let url = data.message;\n  console.log(url)\n  let regex = /https:\\/\\/images\\.dog\\.ceo\\/breeds\\/(\\w+\\-?\\w+)\\/.+/g;\n  let breedName = regex.exec(url);\n  document.getElementById('randomImageContainer').innerHTML = `<img alt=\"random image of a ${fixBreed(breedName[1])}\" src='${url}'/>`;\n  document.querySelector('.dogInfo').innerHTML = `<p class=\"h5\">Random image of a ${fixBreed(breedName[1])}</p>`;\n}\n\n//getImageURL\nfunction getImageURL(data){\n  //get random number\n  let randomNumberURL = data[Math.floor(Math.random()*data.length)+1];\n  listImageContainer.innerHTML = `<img src=\"${randomNumberURL}\" alt=\"${extractBreedName(data)}\"/>`;\n}\n\n//createListItems\nfunction createListItems(data){\n  let output = '';\n  Object.keys(data).forEach(key => output+=`<option value=\"${key}\">${fixBreed(key)}</option>`);\n  document.getElementById('doggoDropDown').innerHTML = output;\n}\n\n//notifyUser\nfunction notifyUser(error){\n  const errorContainer = document.querySelector('.alert');\n  errorContainer.innerHTML = `There was an error with the server request (${error}). <br> Click the button again.`;\n  errorContainer.style.display = 'block';\n  setTimeout(()=>{\n    errorContainer.innerHTML = '';\n    errorContainer.style.display ='none';\n  },4000)\n}\n\n//fixBreed\nfunction fixBreed(breedName){\n  if(breedName === 'germanshepherd'){\n    return 'German Shepherd';\n  }else if(breedName === 'mexicanhairless'){\n    return 'Mexican Hairless';\n  }else if(breedName === 'stbernard'){\n    return 'St. Bernard';\n  }else if(breedName === \"african\"){\n    return 'African Wild Dog';\n  }else if(breedName === 'bullterrier'){\n    return 'Bull Terier';\n  }\n  return capitalize(breedName);\n}\n\n//capitalize breed name\nfunction capitalize(breedName){\n  return breedName.replace(/\\-/g,' ')\n                  .split(\" \")\n                  .map(word => word.charAt(0).toUpperCase()+word.slice(1))\n\t\t\t\t          .join(\" \");\n}\n\n//extract breed name\nfunction extractBreedName(data){\n  let regex = /https:\\/\\/images\\.dog\\.ceo\\/breeds\\/(\\w+-?\\w+)\\/\\w+\\.\\w+/g;\n  let match = regex.exec(data);\n  return fixBreed(match[1]);\n}\n\n//createGrid\nfunction createGrid(data){\n  let output = '';\n  const container = document.querySelector('.card-deck');\n  data.map(item =>{\n    output+=\n    `\n    <div class=\"card mb-4 box-shadow\">\n      <div class=\"card-header\">\n        <h4 class=\"my-0 font-weight-normal\">${extractBreedName(item)}</h4>\n      </div>\n      <div class=\"card-body\">\n        <img src=\"${item}\" class=\"img-fluid\" alt=\"${extractBreedName(item)}\"/>\n      </div>\n    </div>    \n    `\n  })\n    container.innerHTML = output;\n}"]},"metadata":{},"sourceType":"module"}